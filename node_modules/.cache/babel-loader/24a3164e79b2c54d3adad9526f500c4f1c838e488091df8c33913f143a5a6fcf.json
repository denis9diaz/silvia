{"ast":null,"code":"var _jsxFileName = \"/workspaces/silvia/src/js/Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Phase1 from './Phase1';\nimport Phase2 from './Phase2';\nimport Phase3 from './Phase3';\nimport Phase4 from './Phase4';\nimport Phase5 from './Phase5';\nimport Phase6 from './Phase6';\nimport Phase7 from './Phase7';\nimport Phase8 from './Phase8';\nimport Phase9 from './Phase9';\nimport Phase10 from './Phase10';\nimport clues from '../data/clues';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst phases = [Phase1, Phase2, Phase3, Phase4, Phase5, Phase6, Phase7, Phase8, Phase9, Phase10];\nconst Game = () => {\n  _s();\n  const [currentPhase, setCurrentPhase] = useState(0);\n  const [hintsAvailable, setHintsAvailable] = useState(3);\n  const [hintsUsed, setHintsUsed] = useState(new Array(phases.length).fill(false)); // Inicializa un array de falsos\n\n  const nextPhase = () => {\n    if (currentPhase < phases.length - 1) {\n      setCurrentPhase(currentPhase + 1);\n    } else {\n      // Aquí puedes agregar lógica para mostrar el video al final\n      alert(\"¡Felicidades! Has completado el juego. ¡Aquí está tu regalo!\");\n      // Aquí puedes mostrar el video o redirigir a otra página.\n    }\n  };\n  const useHint = () => {\n    if (hintsAvailable > 0 && !hintsUsed[currentPhase]) {\n      setHintsAvailable(hintsAvailable - 1);\n      const updatedHintsUsed = [...hintsUsed];\n      updatedHintsUsed[currentPhase] = true; // Marca la pista como utilizada para esta fase\n      setHintsUsed(updatedHintsUsed);\n    }\n  };\n  const CurrentPhaseComponent = phases[currentPhase];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hint-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: useHint,\n        disabled: hintsAvailable <= 0 || hintsUsed[currentPhase],\n        children: \"Pistas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hints\",\n        children: [0, 1, 2].map(index => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: hintsUsed[index] ? 'hint-used' : '',\n          children: \"\\u2605 \"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CurrentPhaseComponent, {\n      nextPhase: nextPhase,\n      hintUsed: hintsUsed[currentPhase],\n      clue: clues[currentPhase] // Pasa la pista correspondiente\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"ATrAD3UHFUSJHMnIWCr3PoShup0=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","Phase1","Phase2","Phase3","Phase4","Phase5","Phase6","Phase7","Phase8","Phase9","Phase10","clues","jsxDEV","_jsxDEV","phases","Game","_s","currentPhase","setCurrentPhase","hintsAvailable","setHintsAvailable","hintsUsed","setHintsUsed","Array","length","fill","nextPhase","alert","useHint","updatedHintsUsed","CurrentPhaseComponent","className","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","map","index","hintUsed","clue","_c","$RefreshReg$"],"sources":["/workspaces/silvia/src/js/Game.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Phase1 from './Phase1';\nimport Phase2 from './Phase2';\nimport Phase3 from './Phase3';\nimport Phase4 from './Phase4';\nimport Phase5 from './Phase5';\nimport Phase6 from './Phase6';\nimport Phase7 from './Phase7';\nimport Phase8 from './Phase8';\nimport Phase9 from './Phase9';\nimport Phase10 from './Phase10';\n\nimport clues from '../data/clues'; \n\nconst phases = [\n  Phase1, Phase2, Phase3, Phase4, Phase5, \n  Phase6, Phase7, Phase8, Phase9, Phase10\n];\n\nconst Game = () => {\n  const [currentPhase, setCurrentPhase] = useState(0);\n  const [hintsAvailable, setHintsAvailable] = useState(3);\n  const [hintsUsed, setHintsUsed] = useState(new Array(phases.length).fill(false)); // Inicializa un array de falsos\n\n  const nextPhase = () => {\n    if (currentPhase < phases.length - 1) {\n      setCurrentPhase(currentPhase + 1);\n    } else {\n      // Aquí puedes agregar lógica para mostrar el video al final\n      alert(\"¡Felicidades! Has completado el juego. ¡Aquí está tu regalo!\");\n      // Aquí puedes mostrar el video o redirigir a otra página.\n    }\n  };\n\n  const useHint = () => {\n    if (hintsAvailable > 0 && !hintsUsed[currentPhase]) {\n      setHintsAvailable(hintsAvailable - 1);\n      const updatedHintsUsed = [...hintsUsed];\n      updatedHintsUsed[currentPhase] = true; // Marca la pista como utilizada para esta fase\n      setHintsUsed(updatedHintsUsed);\n    }\n  };\n\n  const CurrentPhaseComponent = phases[currentPhase];\n\n  return (\n    <div className=\"game-container\">\n      <div className=\"hint-panel\">\n        <button onClick={useHint} disabled={hintsAvailable <= 0 || hintsUsed[currentPhase]}>\n          Pistas\n        </button>\n        <div className=\"hints\">\n          {[0, 1, 2].map((index) => (\n            <span key={index} className={hintsUsed[index] ? 'hint-used' : ''}>\n              &#9733; {/* Icono de estrella o cualquier icono que elijas */}\n            </span>\n          ))}\n        </div>\n      </div>\n      <CurrentPhaseComponent \n        nextPhase={nextPhase} \n        hintUsed={hintsUsed[currentPhase]} \n        clue={clues[currentPhase]} // Pasa la pista correspondiente\n      />\n    </div>\n  );\n};\n\nexport default Game;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,OAAO,MAAM,WAAW;AAE/B,OAAOC,KAAK,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,MAAM,GAAG,CACbb,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EACtCC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,OAAO,CACxC;AAED,MAAMK,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACmB,cAAc,EAAEC,iBAAiB,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACqB,SAAS,EAAEC,YAAY,CAAC,GAAGtB,QAAQ,CAAC,IAAIuB,KAAK,CAACT,MAAM,CAACU,MAAM,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;EAElF,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtB,IAAIT,YAAY,GAAGH,MAAM,CAACU,MAAM,GAAG,CAAC,EAAE;MACpCN,eAAe,CAACD,YAAY,GAAG,CAAC,CAAC;IACnC,CAAC,MAAM;MACL;MACAU,KAAK,CAAC,8DAA8D,CAAC;MACrE;IACF;EACF,CAAC;EAED,MAAMC,OAAO,GAAGA,CAAA,KAAM;IACpB,IAAIT,cAAc,GAAG,CAAC,IAAI,CAACE,SAAS,CAACJ,YAAY,CAAC,EAAE;MAClDG,iBAAiB,CAACD,cAAc,GAAG,CAAC,CAAC;MACrC,MAAMU,gBAAgB,GAAG,CAAC,GAAGR,SAAS,CAAC;MACvCQ,gBAAgB,CAACZ,YAAY,CAAC,GAAG,IAAI,CAAC,CAAC;MACvCK,YAAY,CAACO,gBAAgB,CAAC;IAChC;EACF,CAAC;EAED,MAAMC,qBAAqB,GAAGhB,MAAM,CAACG,YAAY,CAAC;EAElD,oBACEJ,OAAA;IAAKkB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BnB,OAAA;MAAKkB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBnB,OAAA;QAAQoB,OAAO,EAAEL,OAAQ;QAACM,QAAQ,EAAEf,cAAc,IAAI,CAAC,IAAIE,SAAS,CAACJ,YAAY,CAAE;QAAAe,QAAA,EAAC;MAEpF;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTzB,OAAA;QAAKkB,SAAS,EAAC,OAAO;QAAAC,QAAA,EACnB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAACO,GAAG,CAAEC,KAAK,iBACnB3B,OAAA;UAAkBkB,SAAS,EAAEV,SAAS,CAACmB,KAAK,CAAC,GAAG,WAAW,GAAG,EAAG;UAAAR,QAAA,EAAC;QACxD,GADCQ,KAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNzB,OAAA,CAACiB,qBAAqB;MACpBJ,SAAS,EAAEA,SAAU;MACrBe,QAAQ,EAAEpB,SAAS,CAACJ,YAAY,CAAE;MAClCyB,IAAI,EAAE/B,KAAK,CAACM,YAAY,CAAE,CAAC;IAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACtB,EAAA,CA/CID,IAAI;AAAA4B,EAAA,GAAJ5B,IAAI;AAiDV,eAAeA,IAAI;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}