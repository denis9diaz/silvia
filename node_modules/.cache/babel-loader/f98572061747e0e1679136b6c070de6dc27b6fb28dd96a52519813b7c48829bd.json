{"ast":null,"code":"var _jsxFileName = \"/workspaces/silvia/src/js/Phase7.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Swal from 'sweetalert2';\nimport clues from '../data/clues'; // Asegúrate de importar las pistas correctamente\nimport '../styles/phases.css'; // Importa los estilos\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Phase7 = () => {\n  _s();\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [finalAnswer, setFinalAnswer] = useState('');\n  const [showFinalMessage, setShowFinalMessage] = useState(false); // Nuevo estado para mostrar la pantalla final\n  const [showVideo, setShowVideo] = useState(false); // Estado para manejar la aparición del video\n  const [isImageVisible, setIsImageVisible] = useState(false); // Estado para controlar la visibilidad de la imagen\n  const clue = clues[6]; // Obtiene la pista correspondiente a la fase 7\n\n  const checkAnswer = answer => {\n    if (answer === clue.questions[correctAnswers].correctAnswer) {\n      const newCorrectAnswers = correctAnswers + 1;\n      setCorrectAnswers(newCorrectAnswers);\n\n      // Si el nuevo conteo de respuestas correctas es 2, muestra la imagen sin difuminar\n      if (newCorrectAnswers === 2) {\n        Swal.fire({\n          icon: 'success',\n          title: '¡Correcto!',\n          text: '¡Bien hecho! Has acertado la respuesta. La imagen ya es visible.'\n        }).then(() => {\n          // Aclarar la imagen\n          setIsImageVisible(true);\n        });\n      } else {\n        Swal.fire({\n          icon: 'success',\n          title: '¡Correcto!',\n          text: '¡Bien hecho! Has acertado la respuesta.'\n        });\n      }\n    } else {\n      Swal.fire({\n        icon: 'error',\n        title: 'Incorrecto',\n        text: 'Intenta de nuevo.'\n      });\n    }\n  };\n  const handleFinalAnswer = () => {\n    if (finalAnswer.toLowerCase() === clue.finalAnswer.toLowerCase()) {\n      Swal.fire({\n        icon: 'success',\n        title: '¡Correcto!',\n        text: '¡Has adivinado la imagen!'\n      }).then(() => {\n        setShowFinalMessage(true); // Muestra el mensaje final\n      });\n    } else {\n      Swal.fire({\n        icon: 'error',\n        title: 'Incorrecto',\n        text: 'La respuesta final no es correcta. Intenta de nuevo.'\n      });\n    }\n  };\n  const getImageStyle = () => {\n    const blurAmount = (3 - correctAnswers) * 10; // Mayor difuminado si hay menos respuestas correctas\n    const scaleAmount = 1.2 - correctAnswers * 0.05; // Escala de la imagen ligeramente\n\n    return {\n      filter: `blur(${isImageVisible ? 0 : blurAmount}px)`,\n      // Sin difuminado si la imagen es visible\n      transform: `scale(${scaleAmount})`,\n      // Escalar la imagen sin rotar\n      transition: 'filter 0.5s, transform 0.5s',\n      // Transiciones suaves\n      opacity: 0.9 // Mantener algo de opacidad\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !showFinalMessage ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"phase-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"adivina\",\n        children: \"Adivina la imagen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: clue.imageSrc // La imagen inicial (difuminada)\n        ,\n        alt: \"Imagen para adivinar\",\n        style: getImageStyle() // Estilos aplicados\n        ,\n        className: \"img-phase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"descripcion-fase\",\n          children: \"\\xBFQu\\xE9 prefieres?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), correctAnswers < clue.questions.length && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"question-text\",\n            children: clue.questions[correctAnswers].question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this), clue.questions[correctAnswers].answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"round-button\",\n            onClick: () => checkAnswer(answer),\n            children: answer\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), correctAnswers === clue.questions.length && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"title-phase\",\n          children: \"\\xBFQu\\xE9 prefieres? Regalo material o viaje\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input-phase\" // Clase para el input\n          ,\n          value: finalAnswer,\n          onChange: e => setFinalAnswer(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-button\",\n          onClick: handleFinalAnswer,\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // Mensaje final y opción para ver el video\n    _jsxDEV(\"div\", {\n      className: \"final-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"felicidades\",\n        children: \"\\xA1Felicidades beb\\xE9!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"fel2\",\n        children: \"Aqu\\xED tienes tu regalo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), !showVideo && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"show-gift-button\",\n        onClick: () => setShowVideo(true),\n        children: \"Quiero mi regalo!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this), showVideo && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-container\",\n        style: {\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"video\", {\n          controls: true,\n          className: \"video-container\",\n          style: {\n            width: '50%'\n          },\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"source\", {\n            src: \"https://res.cloudinary.com/dxzhssh9m/video/upload/v1729171142/copy_BF8B69AC-4EDE-4F67-9DA7-9E95F9195FD1_qk3tcl.mov\",\n            type: \"video/mp4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this), \"Tu navegador no soporta el video.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(Phase7, \"gb0uJOJgjXWFoSMBRYsCYr8JOGc=\");\n_c = Phase7;\nexport default Phase7;\nvar _c;\n$RefreshReg$(_c, \"Phase7\");","map":{"version":3,"names":["React","useState","Swal","clues","jsxDEV","_jsxDEV","Phase7","_s","correctAnswers","setCorrectAnswers","finalAnswer","setFinalAnswer","showFinalMessage","setShowFinalMessage","showVideo","setShowVideo","isImageVisible","setIsImageVisible","clue","checkAnswer","answer","questions","correctAnswer","newCorrectAnswers","fire","icon","title","text","then","handleFinalAnswer","toLowerCase","getImageStyle","blurAmount","scaleAmount","filter","transform","transition","opacity","children","className","fileName","_jsxFileName","lineNumber","columnNumber","src","imageSrc","alt","style","length","question","answers","map","index","onClick","type","value","onChange","e","target","textAlign","controls","width","_c","$RefreshReg$"],"sources":["/workspaces/silvia/src/js/Phase7.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Swal from 'sweetalert2';\nimport clues from '../data/clues'; // Asegúrate de importar las pistas correctamente\nimport '../styles/phases.css'; // Importa los estilos\n\nconst Phase7 = () => {\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [finalAnswer, setFinalAnswer] = useState('');\n  const [showFinalMessage, setShowFinalMessage] = useState(false); // Nuevo estado para mostrar la pantalla final\n  const [showVideo, setShowVideo] = useState(false); // Estado para manejar la aparición del video\n  const [isImageVisible, setIsImageVisible] = useState(false); // Estado para controlar la visibilidad de la imagen\n  const clue = clues[6]; // Obtiene la pista correspondiente a la fase 7\n\n  const checkAnswer = (answer) => {\n    if (answer === clue.questions[correctAnswers].correctAnswer) {\n      const newCorrectAnswers = correctAnswers + 1;\n      setCorrectAnswers(newCorrectAnswers);\n\n      // Si el nuevo conteo de respuestas correctas es 2, muestra la imagen sin difuminar\n      if (newCorrectAnswers === 2) {\n        Swal.fire({\n          icon: 'success',\n          title: '¡Correcto!',\n          text: '¡Bien hecho! Has acertado la respuesta. La imagen ya es visible.',\n        }).then(() => {\n          // Aclarar la imagen\n          setIsImageVisible(true);\n        });\n      } else {\n        Swal.fire({\n          icon: 'success',\n          title: '¡Correcto!',\n          text: '¡Bien hecho! Has acertado la respuesta.',\n        });\n      }\n    } else {\n      Swal.fire({\n        icon: 'error',\n        title: 'Incorrecto',\n        text: 'Intenta de nuevo.',\n      });\n    }\n  };\n\n  const handleFinalAnswer = () => {\n    if (finalAnswer.toLowerCase() === clue.finalAnswer.toLowerCase()) {\n      Swal.fire({\n        icon: 'success',\n        title: '¡Correcto!',\n        text: '¡Has adivinado la imagen!',\n      }).then(() => {\n        setShowFinalMessage(true); // Muestra el mensaje final\n      });\n    } else {\n      Swal.fire({\n        icon: 'error',\n        title: 'Incorrecto',\n        text: 'La respuesta final no es correcta. Intenta de nuevo.',\n      });\n    }\n  };\n\n  const getImageStyle = () => {\n    const blurAmount = (3 - correctAnswers) * 10; // Mayor difuminado si hay menos respuestas correctas\n    const scaleAmount = 1.2 - correctAnswers * 0.05; // Escala de la imagen ligeramente\n\n    return {\n      filter: `blur(${isImageVisible ? 0 : blurAmount}px)`, // Sin difuminado si la imagen es visible\n      transform: `scale(${scaleAmount})`, // Escalar la imagen sin rotar\n      transition: 'filter 0.5s, transform 0.5s', // Transiciones suaves\n      opacity: 0.9, // Mantener algo de opacidad\n    };\n  };\n\n  return (\n    <div>\n      {!showFinalMessage ? (\n        <div className=\"phase-container\">\n          <h2 className='adivina'>Adivina la imagen</h2>\n          <img\n            src={clue.imageSrc} // La imagen inicial (difuminada)\n            alt=\"Imagen para adivinar\"\n            style={getImageStyle()} // Estilos aplicados\n            className='img-phase'\n          />\n          <div className=\"question-container\">\n            <h3 className=\"descripcion-fase\">¿Qué prefieres?</h3>\n            {correctAnswers < clue.questions.length && (\n              <div>\n                <p className=\"question-text\">{clue.questions[correctAnswers].question}</p>\n                {clue.questions[correctAnswers].answers.map((answer, index) => (\n                  <button key={index} className=\"round-button\" onClick={() => checkAnswer(answer)}>\n                    {answer}\n                  </button>\n                ))}\n              </div>\n            )}\n          </div>\n\n          {correctAnswers === clue.questions.length && (\n            <div>\n              <h3 className='title-phase'>¿Qué prefieres? Regalo material o viaje</h3>\n              <input\n                type=\"text\"\n                className=\"input-phase\"  // Clase para el input\n                value={finalAnswer}\n                onChange={(e) => setFinalAnswer(e.target.value)}\n              />\n              <button className=\"submit-button\" onClick={handleFinalAnswer}>Enviar</button> {/* Clase para el botón */}\n            </div>\n          )}\n        </div>\n      ) : (\n        // Mensaje final y opción para ver el video\n        <div className=\"final-message\">\n          <h1 className='felicidades'>¡Felicidades bebé!</h1>\n          <p className='fel2'>Aquí tienes tu regalo</p>\n          {!showVideo && (\n            <button className=\"show-gift-button\" onClick={() => setShowVideo(true)}>Quiero mi regalo!</button>\n          )}\n          {showVideo && (\n            <div className=\"video-container\" style={{ textAlign: 'center' }}>\n              <video controls className=\"video-container\" style={{ width: '50%' }}> {/* Ajustar tamaño del video */} \n                <source src=\"https://res.cloudinary.com/dxzhssh9m/video/upload/v1729171142/copy_BF8B69AC-4EDE-4F67-9DA7-9E95F9195FD1_qk3tcl.mov\" type=\"video/mp4\" />\n                Tu navegador no soporta el video.\n              </video>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Phase7;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}