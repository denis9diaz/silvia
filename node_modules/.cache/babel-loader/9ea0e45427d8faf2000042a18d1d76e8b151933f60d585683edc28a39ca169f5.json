{"ast":null,"code":"var _jsxFileName = \"/workspaces/silvia/src/js/Phase1.js\",\n  _s = $RefreshSig$();\n// src/js/Phase1.js\nimport React, { useState } from 'react';\nimport Swal from 'sweetalert2'; // Importa SweetAlert\nimport clues from '../data/clues'; // Asegúrate de importar tus pistas\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Phase1 = ({\n  nextPhase\n}) => {\n  _s();\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [finalAnswer, setFinalAnswer] = useState('');\n  const clue = clues[0]; // Obtiene la pista correspondiente\n\n  const checkAnswer = answer => {\n    if (answer === clue.questions[correctAnswers].correctAnswer) {\n      setCorrectAnswers(correctAnswers + 1);\n      Swal.fire({\n        icon: 'success',\n        title: '¡Correcto!',\n        text: '¡Bien hecho! Has acertado la respuesta.'\n      });\n    } else {\n      Swal.fire({\n        icon: 'error',\n        title: 'Incorrecto',\n        text: 'Intenta de nuevo.'\n      });\n    }\n  };\n  const handleFinalAnswer = () => {\n    if (finalAnswer.toLowerCase() === clue.finalAnswer.toLowerCase()) {\n      Swal.fire({\n        icon: 'success',\n        title: '¡Correcto!',\n        text: '¡Has adivinado la imagen!'\n      }).then(() => {\n        nextPhase(); // Si la respuesta final es correcta, avanza a la siguiente fase\n      });\n    } else {\n      Swal.fire({\n        icon: 'error',\n        title: 'Incorrecto',\n        text: 'La respuesta final no es correcta. Intenta de nuevo.'\n      });\n    }\n  };\n  const getImageOpacity = () => {\n    // Aumenta la opacidad desde 0.1 hasta 1\n    return Math.min(1, 0.1 + correctAnswers * 0.3); // Cambiado a 0.1 y aumento de 0.3 por respuesta correcta\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Adivina la imagen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: clue.imageSrc // La imagen inicial (difuminada)\n      ,\n      alt: \"Imagen para adivinar\",\n      style: {\n        opacity: getImageOpacity(),\n        transition: 'opacity 0.5s'\n      } // Efecto de transición\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-container\",\n      children: correctAnswers < clue.questions.length && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: clue.questions[correctAnswers].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), clue.questions[correctAnswers].answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => checkAnswer(answer),\n          children: answer\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), correctAnswers === clue.questions.length && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\xBFQu\\xE9 es la imagen?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: finalAnswer,\n        onChange: e => setFinalAnswer(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFinalAnswer,\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Phase1, \"saiLgw+qgK0cbnKU8byDlJNrtG8=\");\n_c = Phase1;\nexport default Phase1;\nvar _c;\n$RefreshReg$(_c, \"Phase1\");","map":{"version":3,"names":["React","useState","Swal","clues","jsxDEV","_jsxDEV","Phase1","nextPhase","_s","correctAnswers","setCorrectAnswers","finalAnswer","setFinalAnswer","clue","checkAnswer","answer","questions","correctAnswer","fire","icon","title","text","handleFinalAnswer","toLowerCase","then","getImageOpacity","Math","min","children","fileName","_jsxFileName","lineNumber","columnNumber","src","imageSrc","alt","style","opacity","transition","className","length","question","answers","map","index","onClick","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/workspaces/silvia/src/js/Phase1.js"],"sourcesContent":["// src/js/Phase1.js\nimport React, { useState } from 'react';\nimport Swal from 'sweetalert2'; // Importa SweetAlert\nimport clues from '../data/clues'; // Asegúrate de importar tus pistas\n\nconst Phase1 = ({ nextPhase }) => {\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [finalAnswer, setFinalAnswer] = useState('');\n  const clue = clues[0]; // Obtiene la pista correspondiente\n\n  const checkAnswer = (answer) => {\n    if (answer === clue.questions[correctAnswers].correctAnswer) {\n      setCorrectAnswers(correctAnswers + 1);\n      Swal.fire({\n        icon: 'success',\n        title: '¡Correcto!',\n        text: '¡Bien hecho! Has acertado la respuesta.',\n      });\n    } else {\n      Swal.fire({\n        icon: 'error',\n        title: 'Incorrecto',\n        text: 'Intenta de nuevo.',\n      });\n    }\n  };\n\n  const handleFinalAnswer = () => {\n    if (finalAnswer.toLowerCase() === clue.finalAnswer.toLowerCase()) {\n      Swal.fire({\n        icon: 'success',\n        title: '¡Correcto!',\n        text: '¡Has adivinado la imagen!',\n      }).then(() => {\n        nextPhase(); // Si la respuesta final es correcta, avanza a la siguiente fase\n      });\n    } else {\n      Swal.fire({\n        icon: 'error',\n        title: 'Incorrecto',\n        text: 'La respuesta final no es correcta. Intenta de nuevo.',\n      });\n    }\n  };\n\n  const getImageOpacity = () => {\n    // Aumenta la opacidad desde 0.1 hasta 1\n    return Math.min(1, 0.1 + correctAnswers * 0.3); // Cambiado a 0.1 y aumento de 0.3 por respuesta correcta\n  };\n\n  return (\n    <div>\n      <h2>Adivina la imagen</h2>\n      <img\n        src={clue.imageSrc} // La imagen inicial (difuminada)\n        alt=\"Imagen para adivinar\"\n        style={{ opacity: getImageOpacity(), transition: 'opacity 0.5s' }} // Efecto de transición\n      />\n      <div className=\"question-container\">\n        {correctAnswers < clue.questions.length && (\n          <div>\n            <p>{clue.questions[correctAnswers].question}</p>\n            {clue.questions[correctAnswers].answers.map((answer, index) => (\n              <button key={index} onClick={() => checkAnswer(answer)}>\n                {answer}\n              </button>\n            ))}\n          </div>\n        )}\n      </div>\n      {correctAnswers === clue.questions.length && (\n        <div>\n          <h3>¿Qué es la imagen?</h3>\n          <input\n            type=\"text\"\n            value={finalAnswer}\n            onChange={(e) => setFinalAnswer(e.target.value)}\n          />\n          <button onClick={handleFinalAnswer}>Enviar</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Phase1;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}