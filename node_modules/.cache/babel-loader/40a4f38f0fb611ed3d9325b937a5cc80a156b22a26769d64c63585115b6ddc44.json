{"ast":null,"code":"var _jsxFileName = \"/workspaces/silvia/src/js/Phase4.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Swal from 'sweetalert2'; // Importa SweetAlert\nimport clues from '../data/clues'; // Asegúrate de importar tus pistas\nimport '../styles/phases.css'; // Importa los estilos\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Phase4 = ({\n  nextPhase\n}) => {\n  _s();\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [finalAnswer, setFinalAnswer] = useState('');\n  const clue = clues[3]; // Obtiene la pista correspondiente\n\n  const checkAnswer = answer => {\n    if (answer === clue.questions[correctAnswers].correctAnswer) {\n      setCorrectAnswers(correctAnswers + 1);\n      Swal.fire({\n        icon: 'success',\n        title: '¡Correcto!',\n        text: '¡Bien hecho! Has acertado la respuesta.'\n      });\n    } else {\n      Swal.fire({\n        icon: 'error',\n        title: 'Incorrecto',\n        text: 'Intenta de nuevo.'\n      });\n    }\n  };\n  const handleFinalAnswer = () => {\n    if (finalAnswer.toLowerCase() === clue.finalAnswer.toLowerCase()) {\n      Swal.fire({\n        icon: 'success',\n        title: '¡Correcto!',\n        text: '¡Has adivinado la imagen!'\n      }).then(() => {\n        nextPhase(); // Si la respuesta final es correcta, avanza a la siguiente fase\n      });\n    } else {\n      Swal.fire({\n        icon: 'error',\n        title: 'Incorrecto',\n        text: 'La respuesta final no es correcta. Intenta de nuevo.'\n      });\n    }\n  };\n  const getImageStyle = () => {\n    const blurAmount = (3 - correctAnswers) * 10; // Mayor difuminado si hay menos respuestas correctas\n    const scaleAmount = 1.2 - correctAnswers * 0.05; // Escala de la imagen ligeramente\n\n    return {\n      filter: `blur(${blurAmount}px)`,\n      // Aplicar difuminado\n      transform: `scale(${scaleAmount})`,\n      // Escalar la imagen sin rotar\n      transition: 'filter 0.5s, transform 0.5s',\n      // Transiciones suaves\n      opacity: 0.9,\n      // Mantener algo de opacidad\n      maxWidth: '300px' // Tamaño máximo para la imagen (ajustado a 300px)\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"phase-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"adivina\",\n      children: \"Adivina la imagen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: clue.imageSrc // La imagen inicial (difuminada)\n      ,\n      alt: \"Imagen para adivinar\",\n      style: getImageStyle() // Estilos aplicados\n      ,\n      className: \"img-phase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"descripcion-fase\",\n        children: \"M\\xE1s sobre nosotros:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), correctAnswers < clue.questions.length && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"question-text\",\n          children: clue.questions[correctAnswers].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), clue.questions[correctAnswers].answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"round-button\",\n          onClick: () => checkAnswer(answer),\n          children: answer\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), correctAnswers === clue.questions.length && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"title-phase\",\n        children: \"\\xBFD\\xF3nde fue esto?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"input-phase\" // Añadir clase al input\n        ,\n        value: finalAnswer,\n        onChange: e => setFinalAnswer(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        onClick: handleFinalAnswer,\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(Phase4, \"saiLgw+qgK0cbnKU8byDlJNrtG8=\");\n_c = Phase4;\nexport default Phase4;\nvar _c;\n$RefreshReg$(_c, \"Phase4\");","map":{"version":3,"names":["React","useState","Swal","clues","jsxDEV","_jsxDEV","Phase4","nextPhase","_s","correctAnswers","setCorrectAnswers","finalAnswer","setFinalAnswer","clue","checkAnswer","answer","questions","correctAnswer","fire","icon","title","text","handleFinalAnswer","toLowerCase","then","getImageStyle","blurAmount","scaleAmount","filter","transform","transition","opacity","maxWidth","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","imageSrc","alt","style","length","question","answers","map","index","onClick","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/workspaces/silvia/src/js/Phase4.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Swal from 'sweetalert2'; // Importa SweetAlert\nimport clues from '../data/clues'; // Asegúrate de importar tus pistas\nimport '../styles/phases.css'; // Importa los estilos\n\nconst Phase4 = ({ nextPhase }) => {\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [finalAnswer, setFinalAnswer] = useState('');\n  const clue = clues[3]; // Obtiene la pista correspondiente\n\n  const checkAnswer = (answer) => {\n    if (answer === clue.questions[correctAnswers].correctAnswer) {\n      setCorrectAnswers(correctAnswers + 1);\n      Swal.fire({\n        icon: 'success',\n        title: '¡Correcto!',\n        text: '¡Bien hecho! Has acertado la respuesta.',\n      });\n    } else {\n      Swal.fire({\n        icon: 'error',\n        title: 'Incorrecto',\n        text: 'Intenta de nuevo.',\n      });\n    }\n  };\n\n  const handleFinalAnswer = () => {\n    if (finalAnswer.toLowerCase() === clue.finalAnswer.toLowerCase()) {\n      Swal.fire({\n        icon: 'success',\n        title: '¡Correcto!',\n        text: '¡Has adivinado la imagen!',\n      }).then(() => {\n        nextPhase(); // Si la respuesta final es correcta, avanza a la siguiente fase\n      });\n    } else {\n      Swal.fire({\n        icon: 'error',\n        title: 'Incorrecto',\n        text: 'La respuesta final no es correcta. Intenta de nuevo.',\n      });\n    }\n  };\n\n  const getImageStyle = () => {\n    const blurAmount = (3 - correctAnswers) * 10; // Mayor difuminado si hay menos respuestas correctas\n    const scaleAmount = 1.2 - (correctAnswers * 0.05); // Escala de la imagen ligeramente\n\n    return {\n      filter: `blur(${blurAmount}px)`, // Aplicar difuminado\n      transform: `scale(${scaleAmount})`, // Escalar la imagen sin rotar\n      transition: 'filter 0.5s, transform 0.5s', // Transiciones suaves\n      opacity: 0.9, // Mantener algo de opacidad\n      maxWidth: '300px', // Tamaño máximo para la imagen (ajustado a 300px)\n    };\n  };\n\n  return (\n    <div className=\"phase-container\">\n      <h2 className='adivina'>Adivina la imagen</h2>\n      <img\n        src={clue.imageSrc} // La imagen inicial (difuminada)\n        alt=\"Imagen para adivinar\"\n        style={getImageStyle()} // Estilos aplicados\n        className='img-phase'\n      />\n      <div className=\"question-container\">\n        <h3 className=\"descripcion-fase\">Más sobre nosotros:</h3>\n        {correctAnswers < clue.questions.length && (\n          <div>\n            <p className=\"question-text\">{clue.questions[correctAnswers].question}</p>\n            {clue.questions[correctAnswers].answers.map((answer, index) => (\n              <button key={index} className=\"round-button\" onClick={() => checkAnswer(answer)}>\n                {answer}\n              </button>\n            ))}\n          </div>\n        )}\n      </div>\n      {correctAnswers === clue.questions.length && (\n        <div>\n          <h3 className='title-phase'>¿Dónde fue esto?</h3>\n          <input\n            type=\"text\"\n            className=\"input-phase\" // Añadir clase al input\n            value={finalAnswer}\n            onChange={(e) => setFinalAnswer(e.target.value)}\n          />\n          <button className=\"submit-button\" onClick={handleFinalAnswer}>Enviar</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Phase4;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}